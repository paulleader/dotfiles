if &compatible
  set nocompatible
end

" Shim command and function to allow migration from Vundle to vim-plug.
function! VundleToPlug(vundle_command, arg, ...)
  echom "You are using Vundle's `".a:vundle_command."` command to declare plugins. Dotfiles now uses vim-plug for plugin mangagement. Please rename uses of `".a:vundle_command."` to `Plug`. Plugin was '".a:arg."'."
  let vim_plug_options = {}

  if a:0 > 0
    if has_key(a:1, 'name')
      let name = a:1.name
      let vim_plug_options.dir = "$HOME/.vim/bundle/".a:1.name
    endif

    if has_key(a:1, 'rtp')
      let vim_plug_options.rtp = a:1.rtp
    endif
  endif

  Plug a:arg, vim_plug_options
endfunction

com! -nargs=+  -bar Plugin call VundleToPlug("Plugin", <args>)
com! -nargs=+  -bar Bundle call VundleToPlug("Bundle", <args>)

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
"Plug 'christoomey/vim-run-interactive'
Plug 'kchmck/vim-coffee-script'
Plug 'ctrlpvim/ctrlp.vim'

" Create directories as necessary when editing a new file
Plug 'pbrisbin/vim-mkdir'

Plug 'jgdavey/tslime.vim'
Plug 'janko-m/vim-test'

Plug 'tpope/vim-bundler'

" Automatically add 'end' when opening a Ruby method/class
Plug 'tpope/vim-endwise'

" Common UNIX commands such as :Mkdir
Plug 'tpope/vim-eunuch'

Plug 'sjl/gundo.vim'

Plug 'tpope/vim-fugitive'

Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'

Plug 'tpope/vim-bundler'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-haml'

Plug 'mattn/emmet-vim'

Plug 'tpope/vim-dispatch'
Plug 'vim-ruby/vim-ruby'
Plug 'mrkn/vim-cruby'
Plug 'ecomba/vim-ruby-refactoring'
Plug 'vim-scripts/tComment'

Plug 'airblade/vim-gitgutter'

Plug 'vimwiki/vimwiki', { 'branch': 'dev' }
Plug 'blindFS/vim-taskwarrior'
Plug 'tbabej/taskwiki'

Plug 'junegunn/vim-easy-align'

" Disabling airline due to it possibly contributing to slow responsiveness
" when editing Ruby files
"Plug 'vim-airline/vim-airline'
"Plug 'vim-airline/vim-airline-themes'

" To get the 'yo' alias, which enables paste mode for one insert only
Plug 'tpope/vim-unimpaired'

Plug 'styrmis/molokai'

Plug 'christoomey/vim-tmux-navigator'
Plug 'benmills/vimux'

Plug 'scrooloose/nerdcommenter'
"Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'ervandew/supertab'
Plug 'easymotion/vim-easymotion'
Plug 'bronson/vim-trailing-whitespace'

Plug 'haya14busa/incsearch.vim'
Plug 'vim-scripts/greplace.vim'

Plug 'machakann/vim-highlightedyank'

Plug 'mileszs/ack.vim'

Plug 'elixir-lang/vim-elixir'

Plug 'vim-scripts/indentpython.vim'
Plug 'nvie/vim-flake8'

" Vim text objects for Ruby blocks
Plug 'kana/vim-textobj-user'
Plug 'nelstrom/vim-textobj-rubyblock'

Plug 'wikitopian/hardmode'

Plug 't9md/vim-ruby-xmpfilter'

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
